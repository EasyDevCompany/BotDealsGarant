import os

from utils import keyboards
from aiogram import types, Dispatcher
from utils import sqliter
from aiogram.utils.markdown import hbold
from loguru import logger
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

new_sql = sqliter.Sqlite(os.path.abspath(os.path.join('bot_garant.db')))


# @dp.message_handler(commands=['start'])  # –°—Ç–∞—Ä—Ç - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞, —Ç—É—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ë–î + –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
async def main_menu(message: types.Message):
    """
    –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç,
    –∞–∫—Ç–∏–≤–∞—Ü–∏—è –±–æ—Ç–∞,
    –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    :param message: types.Message
    :return: None
    """
    person_id = message.from_user.id
    new_sql.user_in_bd(person_id)
    await message.answer(f'üõ°{hbold("–ü—Ä–∏–≤–µ—Ç,", message.from_user.first_name, "!")}'
                         f' –Ø-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Å—Ç–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—É—é —Å–¥–µ–ª–∫—É\n\n'
                         f'ü§î{hbold("–ö–∞–∫ –º–Ω–æ—é –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è?")}\n\n'
                         f'üìù–í—ã–±–∏—Ä–∞–π –æ–¥–∏–Ω –ø—É–Ω–∫—Ç –Ω–∏–∂–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –∏ —Å–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –±–æ—Ç–∞. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –ø—Ä–æ–±–ª–µ–º—ã '
                         f'–∫–∞—Å–∞–µ–º–æ –±–æ—Ç–∞, —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫–µ –≤ —Ä–∞–∑–¥–µ–ª–µ "–û –Ω–∞—Å"\n\n'
                         f'–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!‚úåÔ∏è', reply_markup=keyboards.keyboard)

    await message.answer('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚§µÔ∏è                  ', reply_markup=keyboards.yes_or_no_2)


# @dp.message_handler(lambda message: message.text == '–ú–µ–Ω—é')
async def main_menu_message_reply(message: types.Message):
    """
    –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é,
    —á–µ—Ä–µ–∑ "–ú–µ–Ω—é"
    :param message: types.Message
    :return: None
    """
    await message.answer('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚§µÔ∏è                  ', reply_markup=keyboards.yes_or_no_2)


# @dp.callback_query_handler(text='button19', state='*')
async def back_to_main_menu(callback_query: types.CallbackQuery, state: FSMContext):
    """
    –ü–µ—Ä–µ—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
    :param callback_query: types.CallbackQuery
    :param state: FSMContext
    :return: None
    """
    await callback_query.message.edit_text('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚§µÔ∏è                  ')
    await callback_query.message.edit_reply_markup(reply_markup=keyboards.yes_or_no_2)
    await state.finish()


# @dp.callback_query_handler(text='button16')
async def personal_account(callback_query: types.CallbackQuery):
    """
    –ü–µ—Ä–µ—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç,
    –¥–æ—Å—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–¥
    :param callback_query: types.CallbackQuery
    :return: None
    """
    check = callback_query.from_user.id
    information = new_sql.get_all_information(check)
    await callback_query.message.edit_text(f'{hbold("üôã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç!")}\n'
                                           f'–¢–≤–æ–π üÜî: {callback_query.from_user.id}\n\n'
                                           f'‚ôæ{hbold("–°–æ–≤–µ—Ä—à–µ–Ω–æ —Å–¥–µ–ª–æ–∫")}: {information[1]}\n'
                                           f'ü§ë{hbold("–ü—Ä–æ–¥–∞–Ω–æ –Ω–∞")}: {information[2]} RUB\n'
                                           f'üí∞{hbold("–ö—É–ø–ª–µ–Ω–æ –Ω–∞")}: {information[0]} RUB')
    await callback_query.message.edit_reply_markup(reply_markup=keyboards.back_main_menu)


class WaiteMes(StatesGroup):
    """
    –ü—Ä–∏–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º,
    –∫–æ—Ç–æ—Ä–æ–µ –æ–Ω –æ—Ç–ø—Ä–∞–≤–∏–ª –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É
    """
    waite_person_mes = State()


# @dp.callback_query_handler(text='button5')
async def helper_fo_users(callback_query: types.CallbackQuery):
    """
    –ü—Ä–∏–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º,
    –∫–æ—Ç–æ—Ä–æ–µ –æ–Ω –æ—Ç–ø—Ä–∞–≤–∏–ª –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É
    :param callback_query: types.CallbackQuery
    :return: None
    """
    await callback_query.message.edit_text('–ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É '
                                           '–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–µ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –±–æ—Ç—É.')
    await callback_query.message.edit_reply_markup(reply_markup=keyboards.inline_kb9)
    await WaiteMes.waite_person_mes.set()  # –ü—Ä–∏–Ω–∏–º–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ


# @dp.message_handler(state=WaiteMes.waite_person_mes, content_types=types.ContentTypes.TEXT)
async def waite_message(message: types.Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ,
    –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –Ω–∞—à—É –ë–î
    :param message: types.Message
    :param state: FSMContext
    :return: None
    """
    person_id = message.from_user.id
    async with state.proxy() as user_data:
        user_data['input_user'] = message.text.replace('\n', ' ')
    answer = user_data['input_user']
    await message.answer('–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏! –ñ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–∞üïî')
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {person_id} –Ω–∞–ø–∏—Å–∞–ª –≤ —Ç–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫—É |{message.text}|")
    new_sql.add_question(person_id, answer)
    await state.finish()


# @dp.callback_query_handler(text='button15')
async def about_us(callback_query: types.CallbackQuery):
    """
    –ü—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–∞–∑–¥–µ–ª –æ –Ω–∞—Å
    :param callback_query: types.CallbackQuery
    :return: None
    """
    await callback_query.message.edit_text(f'{hbold("–û –Ω–∞—Å:")}\n\n'
                                           f'üîí BOT GARANT –∑–∞—â–∏—â–∞–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å—ã —Å—Ç–æ—Ä–æ–Ω –ø—Ä–∏ —Å–¥–µ–ª–∫–∞—Ö.'
                                           f'–ò—Å–∫–ª—é—á–∏—Ç—å –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ –ø—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤.\n\n'
                                           f'üõ°BOT GARANT —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–º –∑–≤–µ–Ω–æ–º –ø—Ä–∏ –ª—é–±—ã—Ö —Å–¥–µ–ª–∫–∞—Ö –∏ –¥–æ–≥–æ–≤–æ—Ä–∞—Ö, —á—Ç–æ–±—ã —Å—Ç–æ—Ä–æ–Ω—ã —Å–æ–±–ª—é–¥–∞–ª–∏ –∏—Ö —É—Å–ª–æ–≤–∏—è.\n\n'
                                           f'–ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n'
                                           f'–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!')

    await callback_query.message.edit_reply_markup(reply_markup=keyboards.inline_kb2)


class Feedback(StatesGroup):
    """
    –°–æ–∑–¥–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è
    –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –æ—Ç–∑—ã–≤–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    """
    waite_feedback = State()
    waite_callback_answer = State()
    waite_photo = State()
    waite_stars = State()


# @dp.callback_query_handler(text='button3')
async def add_rev(callback_query: types.CallbackQuery):
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ–º –æ—Ç–∑—ã–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param callback_query: types.CallbackQuery
    :return: None
    """
    await callback_query.message.edit_text('–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –±–æ—Ç—É =)')
    await callback_query.message.edit_reply_markup(reply_markup=keyboards.inline_kb9)
    await Feedback.waite_feedback.set()


# @dp.message_handler(state=Feedback.waite_feedback, content_types=types.ContentTypes.TEXT)
async def feed_back_2(message: types.Message, state: FSMContext):
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ–º –æ—Ü–µ–Ω–∫—É –ø–æ 5-—Ç–∏
    –±–∞–ª–ª—å–Ω–æ–π —à–∫–∞–ª–µ
    :param  message: types.Message
    :param state: FSMContext
    :return: None
    """
    await state.update_data(feedback=message.text)
    await message.answer('–û—Ü–µ–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞ –ø–æ 5-—Ç–∏ –±–∞–ª–ª—å–Ω–æ–π —à–∫–∞–ª–µ\n'
                         '–æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 5')
    await Feedback.waite_stars.set()


# @dp.message_handler(state=Feedback.waite_stars)
async def waite_stars(message: types.Message, state: FSMContext):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ü–µ–Ω–∫–∏ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å
    –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞ –≤ –ë–î
    :param message: types.Message
    :param state: FSMContext
    :return: None
    """
    person_id = message.from_user.id
    if message.text.isdigit():
        if 0 < int(message.text) <= 5:
            await state.update_data(stars=message.text)
            user_data = await state.get_data()
            await message.answer('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!üòä')
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {person_id} –æ—Å—Ç–∞–≤–∏–ª –æ—Ç–∑—ã–≤ |{user_data['feedback']}|{user_data['stars']}/5|")
            new_sql.add_feed_back(
                f'{hbold(user_data["feedback"])}\n\n–û—Ü–µ–Ω–∫–∞: {user_data["stars"]}/5\n–û—Å—Ç–∞–≤–∏–ª –æ—Ç–∑—ã–≤: @{message.from_user.username}',
                person_id)
            await state.finish()
        else:
            await message.answer('–í–≤–µ–¥–∏—Ç–µ –æ—Ü–µ–Ω–∫—É –æ—Ç 1-5')
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –æ—Ü–µ–Ω–∫—É —Ü–∏—Ñ—Ä–∞–º–∏, –∞ –Ω–µ –±—É–∫–≤–∞–º–∏')


# @dp.callback_query_handler(text='button2')  # –í—ã–≤–æ–¥ –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ –ë–î
async def send_rev(callback_query: types.CallbackQuery):
    """
    –í—ã–≤–æ–¥ –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ –ë–î
    :param callback_query: types.CallbackQuery
    :return: None
    """
    try:
        # await callback_query.message.edit_text('–ù–∞—à–∏ –æ—Ç–∑—ã–≤—ã:')
        await callback_query.message.edit_reply_markup(reply_markup=keyboards.inline_kb9)
        check = new_sql.get_feed_back()
        rev_list = ''
        for i_feed in check:
            if str(*i_feed) != '' and str(*i_feed) != "None":
                for i_elem in i_feed:
                    rev_list += "\n\n" + i_elem
        await callback_query.message.edit_text(rev_list, reply_markup=keyboards.inline_kb9)
    except Exception as exc:
        await callback_query.message.answer("–û–π, –≤–æ–∑–Ω–∏–∫–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞, –º—ã —Å–∫–æ—Ä–æ –µ–µ –ø–æ—á–∏–Ω–∏–º!")
        logger.error(f'–û—à–∏–±–∫–∞: {exc}')


# @dp.callback_query_handler(text='button13')
async def back_button(callback_query: types.CallbackQuery, state: FSMContext):
    """
    –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥, –∫–æ—Ç–æ—Ä–∞—è
    –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ —Ä–∞–∑–¥–µ–ª –æ –Ω–∞—Å
    :param callback_query: types.CallbackQuery
    :param state: FSMContext
    :return: None
    """
    await callback_query.message.edit_text(f'{hbold("–û –Ω–∞—Å:")}\n\n'
                                           f'üîí BOT GARANT –∑–∞—â–∏—â–∞–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å—ã —Å—Ç–æ—Ä–æ–Ω –ø—Ä–∏ —Å–¥–µ–ª–∫–∞—Ö.'
                                           f'–ò—Å–∫–ª—é—á–∏—Ç—å –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ –ø—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤.\n\n'
                                           f'üõ°BOT GARANT —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–º –∑–≤–µ–Ω–æ–º –ø—Ä–∏ –ª—é–±—ã—Ö —Å–¥–µ–ª–∫–∞—Ö –∏ –¥–æ–≥–æ–≤–æ—Ä–∞—Ö, —á—Ç–æ–±—ã —Å—Ç–æ—Ä–æ–Ω—ã —Å–æ–±–ª—é–¥–∞–ª–∏ –∏—Ö —É—Å–ª–æ–≤–∏—è.\n\n'
                                           f'–ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n'
                                           f'–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!')
    await callback_query.message.edit_reply_markup(reply_markup=keyboards.inline_kb2)
    await state.finish()


# @dp.callback_query_handler(text='button14')
async def faq(callback_query: types.CallbackQuery):
    """
    –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–∞–∑–¥–µ–ª —Å FAQ
    :param callback_query: types.CallbackQuery
    :return: None
    """
    await callback_query.message.edit_text(f'{hbold("–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏:")}\n\n'
                                           f'{hbold("1.1:")} –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–∞–µ—Ç —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –µ–≥–æ –¥–∞–Ω–Ω—ã—Ö, —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–≤–∏–ª–∞–º –¢–µ–ª–µ–≥—Ä–∞–º\n\n'
                                           f'{hbold("1.2:")} –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è @GarantForYoubot –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Å–ª—É—á–∞–π–Ω—É—é —É—Ç–µ—á–∫—É –∫–∞–∫–∏—Ö-–ª–∏–±–æ –¥–∞–Ω–Ω—ã—Ö'
                                           f'(—Å—Ç–∞–≤–∏–º –≤ –∏–∑–≤–µ—Å—Ç–∏–µ, —á—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–∞–∫ –Ω–∞–ø—Ä–∏–º–µ—Ä –Ω–æ–º–µ—Ä, –∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ'
                                           f'–¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–∞–º–∏–º —Ç–µ–ª–µ–≥—Ä–∞–º–æ–º)\n\n'
                                           f'{hbold("2.1:")} –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Ç–æ–≤–∞—Ä, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–¥–∞–≤—Ü–æ–º –∏ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞ –Ω–µ–≥–æ –¥–µ–Ω—å–≥–∏\n\n'
                                           f'{hbold("2.2:")} –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ–Ω—å–≥–∏ –∑–∞ –æ–ø–µ—á–∞—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø—Ä–µ–∂–¥–µ —á–µ–º —á—Ç–æ-—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏\n\n'
                                           f'{hbold("2.3:")} –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –ø—Ä–∞–≤–µ –≤–µ—Ä–Ω—É—Ç—å –≤—ã–ø–ª–∞—Ç—É, –µ—Å–ª–∏ —É—Ç–µ—Ä—è —Å—Ä–µ–¥—Å—Ç–≤ –±—ã–ª–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ –∏–∑-–∑–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å–±–æ–µ–≤ –±–æ—Ç–∞\n\n'
                                           f'{hbold("2.4:")} –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –Ω–µ–∑–∞–∫–æ–Ω—á–µ–Ω–Ω—É—é —Å–¥–µ–ª–∫—É –∏–ª–∏ —Å–¥–µ–ª–∫—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∞ –≤–Ω–µ —Å–µ—Ä–≤–∏—Å–∞\n\n'
                                           f'{hbold("3:")} –ï—Å–ª–∏ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ—à–∏–ª –ø–æ–∫–∏–Ω—É—Ç—å –°–∞–π—Ç –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–∞–π—Ç–∞–º —Ç—Ä–µ—Ç—å–∏—Ö –ª–∏—Ü –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã'
                                           f'—Ç—Ä–µ—Ç—å–∏—Ö –ª–∏—Ü, –æ–Ω –¥–µ–ª–∞–µ—Ç —ç—Ç–æ –Ω–∞ —Å–≤–æ–π —Ä–∏—Å–∫ –∏ —Å —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –Ω–∞—Å—Ç–æ—è—â–∏–µ –ü—Ä–∞–≤–∏–ª–∞ –±–æ–ª–µ–µ –Ω–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—é—Ç—Å—è –Ω–∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö'
                                           f'–¥–µ–π—Å—Ç–≤–∏—è—Ö –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Ç–æ–∏—Ç —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏–º–µ–Ω–∏–º—ã–º–∏ –Ω–æ—Ä–º–∞–º–∏ –∏ –ø–æ–ª–∏—Ç–∏–∫–æ–π, –≤ —Ç–æ–º —á–∏—Å–ª–µ –¥–µ–ª–æ–≤—ã–º–∏ –æ–±—ã—á–∞—è–º–∏ —Ç–µ—Ö –ª–∏—Ü, —á–µ–π –ö–æ–Ω—Ç–µ–Ω—Ç –æ–Ω —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.\n\n'
                                           f'{hbold("4.1:")} –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω–Ω–µ–π —Ä–µ–∫–ª–∞–º—ã —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ä–∞–∑–¥–µ–ª–µ "–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤" –Ω–µ –æ–¥–æ–±—Ä—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π, –∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–ª–æ–∫–∏—Ä–æ–≤–∫—É\n\n'
                                           f'{hbold("4.2:")} –°–ø–∞–º —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –Ω–µ –∫–∞—Å–∞—é—â–∏—Ö—Å—è —Ç–µ–º—ã –≤ —Ä–∞–∑–¥–µ–ª "–ø–æ–¥–¥–µ—Ä–∂–∫–∞" –Ω–µ –æ–¥–æ–±—Ä—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –∏ –∫–∞—Ä–∞–µ—Ç—Å—è –≤—Ä–µ–º–µ–Ω–Ω–æ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π\n\n'
                                           f'{hbold("5:")}  –í—Å–µ –æ–±—ä–µ–∫—Ç—ã, —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã–µ –Ω–∞ –°–∞–π—Ç–µ, –≤ —Ç–æ–º —á–∏—Å–ª–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–∏–∑–∞–π–Ω–∞, —Ç–µ–∫—Å—Ç, –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏, –≤–∏–¥–µ–æ, —Å–∫—Ä–∏–ø—Ç—ã, –ø—Ä–æ–≥—Ä–∞–º–º—ã, –º—É–∑—ã–∫–∞, –∑–≤—É–∫–∏ –∏ –¥—Ä—É–≥–∏–µ –æ–±—ä–µ–∫—Ç—ã –∏ –∏—Ö –ø–æ–¥–±–æ—Ä–∫–∏ (–¥–∞–ª–µ–µ ‚Äî –ö–æ–Ω—Ç–µ–Ω—Ç),'
                                           f' —è–≤–ª—è—é—Ç—Å—è –æ–±—ä–µ–∫—Ç–∞–º–∏ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∞–≤ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–µ—Ä–≤–∏—Å–∞ –∏ –¥—Ä—É–≥–∏—Ö –ø—Ä–∞–≤–æ–æ–±–ª–∞–¥–∞—Ç–µ–ª–µ–π, –≤—Å–µ –ø—Ä–∞–≤–∞ –Ω–∞ —ç—Ç–∏ –æ–±—ä–µ–∫—Ç—ã –∑–∞—â–∏—â–µ–Ω—ã.\n\n'
                                           f'{hbold("6:")} –ù–µ–∑–Ω–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –Ω–µ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏')

    await callback_query.message.edit_reply_markup(reply_markup=keyboards.inline_kb9)


async def history_menu(callback_query: types.CallbackQuery):
    """
    –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    :param callback_query: types.CallbackQuery
    :return: None
    """
    user_id = callback_query.from_user.id
    history = new_sql.get_users_history(user_id)
    await callback_query.message.edit_text(history, reply_markup=keyboards.back_to_personal_account)


async def back_to_personal(callback_query: types.CallbackQuery):
    """
    –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥,
    –≤–æ–∑—Ä–∞—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –≤ –µ–≥–æ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
    :param callback_query: types.CallbackQuery
    :return: None
    """
    user_id = callback_query.from_user.id
    information = new_sql.get_all_information(user_id)
    await callback_query.message.edit_text(f'{hbold("üôã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç!")}\n'
                                           f'–¢–≤–æ–π üÜî: {callback_query.from_user.id}\n\n'
                                           f'‚ôæ{hbold("–°–æ–≤–µ—Ä—à–µ–Ω–æ —Å–¥–µ–ª–æ–∫")}: {information[1]}\n'
                                           f'ü§ë{hbold("–ü—Ä–æ–¥–∞–Ω–æ –Ω–∞")}: {information[2]} RUB\n'
                                           f'üí∞{hbold("–ö—É–ø–ª–µ–Ω–æ –Ω–∞")}: {information[0]} RUB')
    await callback_query.message.edit_reply_markup(reply_markup=keyboards.back_main_menu)


def register_main_menu(dispatcher: Dispatcher):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤
    :param dispatcher: Dispatcher
    :return: None
    """
    dispatcher.register_message_handler(main_menu, commands=['start'])
    dispatcher.register_message_handler(main_menu_message_reply, lambda message: message.text == '–ú–µ–Ω—é')
    dispatcher.register_callback_query_handler(back_to_main_menu, text='button19', state='*')
    dispatcher.register_callback_query_handler(personal_account, text='button16')
    dispatcher.register_callback_query_handler(helper_fo_users, text='button5')
    dispatcher.register_message_handler(waite_message, state=WaiteMes.waite_person_mes,
                                        content_types=types.ContentTypes.TEXT)
    dispatcher.register_callback_query_handler(about_us, text='button15')
    dispatcher.register_callback_query_handler(add_rev, text='button3')
    dispatcher.register_message_handler(feed_back_2, state=Feedback.waite_feedback,
                                        content_types=types.ContentTypes.TEXT)
    dispatcher.register_message_handler(waite_stars, state=Feedback.waite_stars)
    dispatcher.register_callback_query_handler(send_rev, text='button2')
    dispatcher.register_callback_query_handler(back_button, text='button13', state='*')
    dispatcher.register_callback_query_handler(faq, text='button14')
    dispatcher.register_callback_query_handler(history_menu, text="history")
    dispatcher.register_callback_query_handler(back_to_personal, text="cancel_to_personal_account")
